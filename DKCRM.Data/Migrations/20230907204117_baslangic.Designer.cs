// <auto-generated />
using System;
using DKCRM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DKCRM.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230907204117_baslangic")]
    partial class baslangic
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DKCRM.Core.Entities.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CityCodeCityID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistrictCodeCityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("InDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CityCodeCityID");

                    b.HasIndex("DistrictCodeCityID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("DKCRM.Core.Entities.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Şikayet",
                            InDate = new DateTime(2023, 9, 7, 23, 41, 17, 55, DateTimeKind.Local).AddTicks(6304),
                            IsActive = false
                        });
                });

            modelBuilder.Entity("DKCRM.Core.Entities.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CityID");

                    b.ToTable("Cities");

                    b.HasDiscriminator<string>("Discriminator").HasValue("City");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            CityID = 1,
                            Description = "Adana",
                            InDate = new DateTime(2023, 9, 7, 23, 41, 17, 55, DateTimeKind.Local).AddTicks(6283)
                        });
                });

            modelBuilder.Entity("DKCRM.Core.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<DateTime>("InDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DKCRM.Core.Entities.Defination", b =>
                {
                    b.Property<int>("DefinationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DefinationID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DefinationID");

                    b.ToTable("Definations");
                });

            modelBuilder.Entity("DKCRM.Core.Entities.ErrorLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("InDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("DKCRM.Core.Entities.Request", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestID"));

                    b.Property<bool>("DisplayFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestID");

                    b.ToTable("Requests");

                    b.HasData(
                        new
                        {
                            RequestID = 1,
                            DisplayFlag = false,
                            InDate = new DateTime(2023, 9, 7, 23, 41, 17, 55, DateTimeKind.Local).AddTicks(6320),
                            RequestName = "Geç Teslim"
                        });
                });

            modelBuilder.Entity("DKCRM.Core.Entities.Statu", b =>
                {
                    b.Property<int>("StatuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatuID"));

                    b.Property<DateTime>("InDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatuCode")
                        .HasColumnType("int");

                    b.Property<string>("StatuName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatuID");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("DKCRM.Core.Entities.Telephone", b =>
                {
                    b.Property<int>("TelephoneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TelephoneID"));

                    b.Property<DateTime>("InDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrefixCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TelephoneID");

                    b.ToTable("Telephones");
                });

            modelBuilder.Entity("DKCRM.Core.Entities.Ticket", b =>
                {
                    b.Property<int>("TicketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketID"));

                    b.Property<DateTime>("InDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PersonelIDUserID")
                        .HasColumnType("int");

                    b.HasKey("TicketID");

                    b.HasIndex("PersonelIDUserID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("DKCRM.Core.Entities.Ticket_ATT", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ATTValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Ticket_ATTs");
                });

            modelBuilder.Entity("DKCRM.Core.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAgent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBO")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "admin@kapan.com",
                            InDate = new DateTime(2023, 9, 7, 23, 41, 17, 55, DateTimeKind.Local).AddTicks(6119),
                            IsAdmin = true,
                            Name = "Deniz",
                            Password = "010203",
                            SurName = "Kapan"
                        },
                        new
                        {
                            UserID = 2,
                            Email = "bo@kapan.com",
                            InDate = new DateTime(2023, 9, 7, 23, 41, 17, 55, DateTimeKind.Local).AddTicks(6138),
                            IsBO = true,
                            Name = "Deniz",
                            Password = "010203",
                            SurName = "Kapan"
                        },
                        new
                        {
                            UserID = 3,
                            Email = "agent@kapan.com",
                            InDate = new DateTime(2023, 9, 7, 23, 41, 17, 55, DateTimeKind.Local).AddTicks(6141),
                            IsAgent = true,
                            Name = "Deniz",
                            Password = "010203",
                            SurName = "Kapan"
                        });
                });

            modelBuilder.Entity("DKCRM.Core.Entities.District", b =>
                {
                    b.HasBaseType("DKCRM.Core.Entities.City");

                    b.Property<int>("DistrictCode")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("District");
                });

            modelBuilder.Entity("DKCRM.Core.Entities.Address", b =>
                {
                    b.HasOne("DKCRM.Core.Entities.City", "CityCode")
                        .WithMany()
                        .HasForeignKey("CityCodeCityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DKCRM.Core.Entities.District", "DistrictCode")
                        .WithMany()
                        .HasForeignKey("DistrictCodeCityID");

                    b.Navigation("CityCode");

                    b.Navigation("DistrictCode");
                });

            modelBuilder.Entity("DKCRM.Core.Entities.Ticket", b =>
                {
                    b.HasOne("DKCRM.Core.Entities.User", "PersonelID")
                        .WithMany()
                        .HasForeignKey("PersonelIDUserID");

                    b.Navigation("PersonelID");
                });
#pragma warning restore 612, 618
        }
    }
}
